// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.2'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
    }

    apply plugin: 'checkstyle'

    //add checkstyle to each module
    task checkstyle(type: Checkstyle) {
        configFile = new File(rootDir, "config/checkstyle/checkstyle.xml")
        //use same config file for each module
        source 'src/'
        include '**/*.java'
        exclude '**/gen/**'
        classpath = files()
        reports {
            xml {
                destination "build/outputs/reports/checkstyle-results.xml"
            }
        }
    }

    task checkstyleReport(dependsOn: 'checkstyle') {
        doLast {
            if (file("build/outputs/reports/checkstyle-results.xml").exists()) {
                ant.xslt(in: "build/outputs/reports/checkstyle-results.xml",
                        style: "${rootDir}/config/checkstyle/checkstyle.xsl",
                        out: "build/outputs/reports/checkstyle-results.html"
                )
            }
        }
    }
}

subprojects {
    afterEvaluate { project ->
        if (project.hasProperty('android')) {
            def config = android.defaultConfig
            def ext = rootProject.ext
            if (android.compileSdkVersion == null)
                android.compileSdkVersion ext.compileSdkVersion
            if (config.minSdkVersion == null)
                config.minSdkVersion ext.minSdkVersion
            if (config.targetSdkVersion == null)
                config.targetSdkVersion ext.targetSdkVersion
            if (config.versionCode == null)
                config.versionCode ext.versionCode
            if (config.versionName == null)
                config.versionName ext.versionName
            if (config.testInstrumentationRunner == null)
                config.testInstrumentationRunner ext.testInstrumentationRunner
        }
    }
}

ext {
    versionCode = 1
    versionName = '1.0.0'
    minSdkVersion = 15
    targetSdkVersion = 23
    compileSdkVersion = 23
    buildToolsVersion = '23.0.3'
    supportLibVersion = '24.0.0'
    testInstrumentationRunner = 'android.support.test.runner.AndroidJUnitRunner'
}

task clean(type: Delete) {
    delete project.buildDir
}